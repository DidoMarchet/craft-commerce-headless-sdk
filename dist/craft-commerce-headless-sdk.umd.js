(function(i,u){typeof exports=="object"&&typeof module<"u"?u(exports):typeof define=="function"&&define.amd?define(["exports"],u):(i=typeof globalThis<"u"?globalThis:i||self,u(i.CraftCommerceHeadlessSdk={}))})(this,function(i){"use strict";var L=Object.defineProperty;var q=(i,u,y)=>u in i?L(i,u,{enumerable:!0,configurable:!0,writable:!0,value:y}):i[u]=y;var b=(i,u,y)=>(q(i,typeof u!="symbol"?u+"":u,y),y);const u=t=>/^[a-zA-Z0-9.-]+$/.test(t),y=(t,s)=>{var e;if(!u(s))return null;const a=`; ${document.cookie}`.split(`; ${t}=`);return a.length===2&&((e=a.pop())==null?void 0:e.split(";").shift())||null};class S extends Error{constructor(n,a,e,c,r,m){super(n);b(this,"status");b(this,"data");b(this,"endpoint");b(this,"method");b(this,"retryCount");this.name="ApiError",this.status=a,this.data=e,this.endpoint=c,this.method=r,this.retryCount=m,Object.setPrototypeOf(this,S.prototype)}}function f(t,...s){t&&console.log(...s)}let p=null,w=!1,T=1,g="YOUR_API_BASE_URL";function k(t){return t.endsWith("/")?t:t+"/"}async function E(){if(p||(p=y("CRAFT_CSRF_TOKEN",g)),p)return p;const s=await fetch(`${g}actions/users/session-info`,{headers:{Accept:"application/json"},credentials:"include"});if(!s.ok){const a=await s.json().catch(()=>({})),e=a.message||`Failed to fetch CSRF token with status ${s.status}`;throw new S(e,s.status,a,"actions/users/session-info","GET",0)}return p=(await s.json()).csrfTokenValue,p}async function U(t){let s="API request failed";try{const n=await t.json();n.error?s=n.error:n.errors?s=Object.values(n.errors).flat().join(", "):s=n.message||s}catch{s=await t.text()||t.statusText||s}return s=`(${t.status}) ${s}`,new Error(s)}function O(t){w=!!t.enableLogging,T=t.maxRetries??1,g=k(t.apiBaseUrl),f(w,"Craft Commerce using base URL:",g);const s=async(a,e,c={},r=0)=>{try{p||(p=await E());const{accept:m="application/json",contentType:d="application/json",...o}=c,l=e!==void 0?JSON.stringify(e):void 0;f(w,"Craft Commerce POST request:",a,{retryCount:r,body:l});const h=await fetch(`${g}${a}`,{method:"POST",headers:{"Content-Type":d,Accept:m,"X-CSRF-Token":p,"X-Requested-With":"XMLHttpRequest",...o},body:l,credentials:"include"});if(!h.ok){const P=await h.json().catch(()=>({}));if(f(w,"Craft Commerce POST error data:",P),r<T&&h.status===400&&P.message==="Unable to verify your data submission.")return console.warn("CSRF token invalid. Retrying request..."),p=null,s(a,e,c,r+1);const $=P.message||`API request failed with status ${h.status}`;throw new S($,h.status,P,a,"POST",r)}return m==="application/pdf"?await h.blob():await h.json()}catch(m){throw f(w,"Craft Commerce POST caught error:",m),m}};return{post:s,get:async(a,e={},c={})=>{try{const{accept:r="application/json",...m}=c,d=new URL(a,g);Object.keys(e).forEach(l=>{e[l]!==void 0&&e[l]!==null&&d.searchParams.append(l,String(e[l]))}),f(w,"Craft Commerce GET request:",d.toString());const o=await fetch(d.toString(),{method:"GET",headers:{Accept:r,"X-Requested-With":"XMLHttpRequest",...m},credentials:"include"});if(!o.ok)throw console.error(`API GET error (${a}):`,await o.text()),await U(o);return r==="application/pdf"?await o.blob():await o.json()}catch(r){throw f(w,"Craft Commerce GET caught error:",r),r}}}}const v=t=>({loginUser:async o=>await t.post("actions/users/login",o),saveUser:async o=>await t.post("actions/users/save-user",o),uploadUserPhoto:async o=>await t.post("actions/users/upload-user-photo",o),sendPasswordResetEmail:async o=>await t.post("actions/users/send-password-reset-email",o),setPassword:async o=>await t.post("actions/users/set-password",o),saveAddress:async o=>await t.post("actions/users/save-address",o),deleteAddress:async o=>await t.post("actions/users/delete-address",o),getSessionInfo:async()=>await t.get("actions/users/session-info")}),R=t=>({completeCart:async r=>await t.post("actions/commerce/cart/complete",r),getCart:async()=>await t.get("actions/commerce/cart/get-cart"),loadCart:async r=>await t.post("actions/commerce/cart/load-cart",r),forgetCart:async()=>await t.post("actions/commerce/cart/forget-cart",void 0,{accept:"text/html"}),updateCart:async r=>await t.post("actions/commerce/cart/update-cart",r)}),C=t=>({addPaymentSource:async e=>await t.post("actions/commerce/payment-sources/add",e),setPrimaryPaymentSource:async e=>await t.post("actions/commerce/payment-sources/set-primary-payment-source",e),deletePaymentSource:async e=>await t.post("actions/commerce/payment-sources/delete",e)}),j=t=>({completePayment:async a=>await t.get("actions/commerce/payments/complete-payment",a),pay:async a=>await t.post("actions/commerce/payments/pay",a)}),A=t=>({subscribe:async c=>await t.post("actions/commerce/subscriptions/subscribe",c),cancel:async c=>await t.post("actions/commerce/subscriptions/cancel",c),switchPlan:async c=>await t.post("actions/commerce/subscriptions/switch",c),reactivate:async c=>await t.post("actions/commerce/subscriptions/reactivate",c)}),F=({apiBaseUrl:t,enableLogging:s=!1,maxRetries:n})=>{const e=O({apiBaseUrl:t,enableLogging:!!s,maxRetries:n}),c=v(e),r=R(e),m=C(e),d=j(e),o=A(e);return{client:e,users:c,cart:r,paymentSources:m,payment:d,subscriptions:o}};i.cart=R,i.craftCommerceHeadlessSdk=F,i.payment=j,i.paymentSources=C,i.subscriptions=A,i.users=v,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
