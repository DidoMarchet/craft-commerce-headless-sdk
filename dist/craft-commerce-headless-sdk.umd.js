(function(r,l){typeof exports=="object"&&typeof module<"u"?l(exports):typeof define=="function"&&define.amd?define(["exports"],l):(r=typeof globalThis<"u"?globalThis:r||self,l(r.CraftCommerceHeadlessSdk={}))})(this,function(r){"use strict";var x=Object.defineProperty;var L=(r,l,f)=>l in r?x(r,l,{enumerable:!0,configurable:!0,writable:!0,value:f}):r[l]=f;var b=(r,l,f)=>(L(r,typeof l!="symbol"?l+"":l,f),f);const l=t=>/^[a-zA-Z0-9.-]+$/.test(t),f=(t,o)=>{var e;if(!l(o))return null;const a=`; ${document.cookie}`.split(`; ${t}=`);return a.length===2&&((e=a.pop())==null?void 0:e.split(";").shift())||null};class d extends Error{constructor(m,a,e,s,u,c){super(m);b(this,"status");b(this,"data");b(this,"endpoint");b(this,"method");b(this,"retryCount");this.name="CraftCommerceSdkError",this.status=a,this.data=e,this.endpoint=s,this.method=u,this.retryCount=c,Object.setPrototypeOf(this,d.prototype)}}function g(t,...o){t&&console.log(...o)}function U(t){return t.endsWith("/")?t:t+"/"}async function $(t,o){const a=f("CRAFT_CSRF_TOKEN",t);if(a)return a;const e=await fetch(`${t}actions/users/session-info`,{headers:{Accept:"application/json"},credentials:"include"});if(!e.ok){const u=await e.json().catch(()=>({})),c=u.message||`Failed to fetch CSRF token with status ${e.status}`;throw new d(c,e.status,u,"actions/users/session-info","GET",0)}return(await e.json()).csrfTokenValue}async function A(t,o,m,a){let e="API request failed",s={};try{(t.headers.get("Content-Type")||"").includes("application/json")?(s=await t.json(),s.error?e=s.error:s.errors?e=Object.values(s.errors).flat().join(", "):e=s.message||e):e=await t.text()||t.statusText||e}catch{e=t.statusText||e}return e=`(${t.status}) ${e}`,new d(e,t.status,s,o,m,a)}const k=t=>{const o=!!t.enableLogging,m=t.maxRetries??1,a=U(t.apiBaseUrl);let e=null;g(o,"Craft Commerce using base URL:",a);const s=async(c,y,n={},p=0)=>{try{e||(e=await $(a,o));const{accept:w="application/json",contentType:P="application/json",...h}=n,S=y!==void 0?JSON.stringify(y):void 0;g(o,"Craft Commerce POST request:",c,{retryCount:p,body:S});const i=await fetch(`${a}${c}`,{method:"POST",headers:{"Content-Type":P,Accept:w,"X-CSRF-Token":e,"X-Requested-With":"XMLHttpRequest",...h},body:S,credentials:"include"});if(!i.ok){let T={};if((i.headers.get("Content-Type")||"").includes("application/json")?T=await i.json().catch(()=>({})):T={message:await i.text()},g(o,"Craft Commerce POST error data:",T),p<m&&i.status===400&&T.message==="Unable to verify your data submission.")return console.warn("CSRF token invalid. Retrying request..."),e=null,s(c,y,n,p+1);throw new d(T.message||`API request failed with status ${i.status}`,i.status,T,c,"POST",p)}if(w==="application/pdf")return await i.blob();const C=await i.text();if(!C)throw new d(`(${i.status}) Empty response`,i.status,{},c,"POST",p);try{return JSON.parse(C)}catch{return C}}catch(w){throw g(o,"Craft Commerce POST caught error:",w),w instanceof d?w:new d(w.message||"Unknown error",0,{},c,"POST",p)}};return{post:s,get:async(c,y={},n={})=>{try{const{accept:p="application/json",...w}=n,P=new URL(c,a);Object.keys(y).forEach(i=>{y[i]!==void 0&&y[i]!==null&&P.searchParams.append(i,String(y[i]))}),g(o,"Craft Commerce GET request:",P.toString());const h=await fetch(P.toString(),{method:"GET",headers:{Accept:p,"X-Requested-With":"XMLHttpRequest",...w},credentials:"include"});if(!h.ok)throw console.error(`API GET error (${c}):`,await h.text()),await A(h,c,"GET",0);if(p==="application/pdf")return await h.blob();const S=await h.text();if(!S)throw new d(`(${h.status}) Empty response`,h.status,{},c,"GET",0);try{return JSON.parse(S)}catch{return S}}catch(p){throw g(o,"Craft Commerce GET caught error:",p),p instanceof d?p:new d(p.message||"Unknown error",0,{},c,"GET",0)}}}},v=t=>({loginUser:async n=>await t.post("actions/users/login",n),saveUser:async n=>await t.post("actions/users/save-user",n),uploadUserPhoto:async n=>await t.post("actions/users/upload-user-photo",n),sendPasswordResetEmail:async n=>await t.post("actions/users/send-password-reset-email",n),setPassword:async n=>await t.post("actions/users/set-password",n),saveAddress:async n=>await t.post("actions/users/save-address",n),deleteAddress:async n=>await t.post("actions/users/delete-address",n),getSessionInfo:async()=>await t.get("actions/users/session-info")}),E=t=>({completeCart:async u=>await t.post("actions/commerce/cart/complete",u),getCart:async()=>await t.get("actions/commerce/cart/get-cart"),loadCart:async u=>await t.post("actions/commerce/cart/load-cart",u),forgetCart:async()=>await t.post("actions/commerce/cart/forget-cart",void 0,{accept:"text/html"}),updateCart:async u=>await t.post("actions/commerce/cart/update-cart",u)}),R=t=>({addPaymentSource:async e=>await t.post("actions/commerce/payment-sources/add",e),setPrimaryPaymentSource:async e=>await t.post("actions/commerce/payment-sources/set-primary-payment-source",e),deletePaymentSource:async e=>await t.post("actions/commerce/payment-sources/delete",e)}),j=t=>({completePayment:async a=>await t.get("actions/commerce/payments/complete-payment",a),pay:async a=>await t.post("actions/commerce/payments/pay",a)}),O=t=>({subscribe:async s=>await t.post("actions/commerce/subscriptions/subscribe",s),cancel:async s=>await t.post("actions/commerce/subscriptions/cancel",s),switchPlan:async s=>await t.post("actions/commerce/subscriptions/switch",s),reactivate:async s=>await t.post("actions/commerce/subscriptions/reactivate",s)}),F=({apiBaseUrl:t,enableLogging:o=!1,maxRetries:m})=>{const e=k({apiBaseUrl:t,enableLogging:!!o,maxRetries:m}),s=v(e),u=E(e),c=R(e),y=j(e),n=O(e);return{client:e,users:s,cart:u,paymentSources:c,payment:y,subscriptions:n}};r.CraftCommerceSdkError=d,r.cart=E,r.client=k,r.craftCommerceHeadlessSdk=F,r.payment=j,r.paymentSources=R,r.subscriptions=O,r.users=v,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
